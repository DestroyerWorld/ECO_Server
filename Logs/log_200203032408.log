[15:24:08.574] [1] [ Info] [Eco] >>> START EcoServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null 
[15:24:08.603] [1] [ Info] [Eco] Eco Server 0.8.3.2 beta
 
[15:24:08.683] [1] [ Info] [Eco] Server Initialization...  
[15:24:08.683] [1] [ Info] [Eco] Starting LocalizationPlugin...  
[15:24:09.035] [1] [ Info] [Eco] Запуск ПлагинНабораМодификаций...  
[15:24:09.035] [1] [ Info] [Eco] Загрузка модификаций...  
[15:24:09.131] [1] [ Info] [Eco] Компилирование модификаций...  
[15:24:10.626] [1] [ Info] [Eco] Загружаем 0Harmony...
 
[15:24:10.626] [1] [ Info] [Eco] Загружаем Asphalt-ModKit...
 
[15:24:10.755] [1] [ Info] [Eco] Загружаем Eco.IntegrationTests...
 
[15:24:10.755] [1] [ Info] [Eco] Загружаем DiscordLinkUnified...
 
[15:24:10.810] [1] [ Info] [Eco] Загружаем EcoStory...
 
[15:24:10.810] [1] [ Info] [Eco] Загрузка модификаций завершена за 1 780,5мс
 
[15:24:10.810] [1] [ Info] [Eco] Запуск МенеджерСети...  
[15:24:10.810] [6] [ Info] [Eco] Инициализация типов симуляции...  
[15:24:10.902] [9] [ Info] [Eco] Запуск ПлагинГенератораМира...  
[15:24:10.902] [12] [ Info] [Eco] Запуск ПлагинИгровойСтатистики...  
[15:24:10.902] [7] [ Info] [Eco] Запуск ПлагинРезервногоКопирования...  
[15:24:10.912] [7] [ Info] [Eco] Запуск МенеджерХранилища...  
[15:24:12.342] [6] [ Info] [Eco] Инициализация предметов...  
[15:24:12.400] [6] [ Info] [NidToolbox] Checking Settings.json 
[15:24:12.400] [6] [ Info] [NidToolbox] Config file: Mods\NidToolbox\Config\Settings.json exists. 
[15:24:12.405] [6] [ Info] [NidToolbox] Json file: Mods\NidToolbox\Config\Settings.json readable and correct. 
[15:24:12.405] [6] [ Info] [NidToolbox] Checking CommandPermissions.json 
[15:24:12.405] [6] [ Info] [NidToolbox] Config file: Mods\NidToolbox\Config\CommandPermissions.json exists. 
[15:24:12.405] [6] [ Info] [NidToolbox] Json file: Mods\NidToolbox\Config\CommandPermissions.json readable and correct. 
[15:24:12.405] [6] [ Info] [NidToolbox] Checking TimerMessages.json 
[15:24:12.405] [6] [ Info] [NidToolbox] Config file: Mods\NidToolbox\Config\TimerMessages.json exists. 
[15:24:12.405] [6] [ Info] [NidToolbox] Json file: Mods\NidToolbox\Config\TimerMessages.json readable and correct. 
[15:24:12.405] [6] [ Info] [NidToolbox] Checking ScheduledMessages.json 
[15:24:12.405] [6] [ Info] [NidToolbox] Config file: Mods\NidToolbox\Config\ScheduledMessages.json exists. 
[15:24:12.405] [6] [ Info] [NidToolbox] Json file: Mods\NidToolbox\Config\ScheduledMessages.json readable and correct. 
[15:24:12.405] [6] [ Info] [NidToolbox] No UserHomes directory, skipping user homes config checks. 
[15:24:12.765] [6] [ Info] [Eco] Newtonsoft.Json.JsonSerializationException: Error converting value "Enabled" to type 'NidToolbox.Permissions+PermissionGroup'. Path 'CommandsModule.PermissionLevels[101].PermissionLevel', line 412, position 36. ---> System.ArgumentException: Requested value 'Enabled' was not found.
   в Newtonsoft.Json.Utilities.EnumUtils.ParseEnum(Type enumType, String value, Boolean disallowNumber)
   в Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)
   --- Конец трассировки внутреннего стека исключений ---
   в Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(JsonConverter converter, JsonReader reader, Type objectType, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(JsonObjectContract contract, JsonProperty containerProperty, JsonReader reader, Type objectType)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ObjectConstructor`1 creator, String id)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(IDictionary dictionary, JsonReader reader, JsonDictionaryContract contract, JsonProperty containerProperty, String id)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   в Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   в Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   в Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   в Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   в Asphalt.Storeable.Json.JsonFileStorageSerializer.Asphalt.Storeable.CommonFileStorage.IFileStorageSerializer.Deserialize(String pText)
   в Asphalt.Storeable.CommonFileStorage.FileStorage.Reload()
   в Asphalt.Storeable.CommonFileStorage.FileStorage..ctor(IFileStorageSerializer pSerializer, String pFileName, IDictionary`2 pDefaultValues, Boolean pSaveDefaultValues)
   в Asphalt.Storeable.StorageFactory.<>c__DisplayClass1_0.<GetStorageFactory>b__0(PropertyFieldInfo l_pfi, Dictionary`2 defaultValues)
   в Asphalt.Service.ServiceHelper.Inject(Type pServerPlugin, Func`3 pFactory, PropertyFieldInfo pfi)
   в Asphalt.Service.ServiceHelper.InjectValues(Type pServerPluginType)
   в Asphalt.Service.ServiceHelper.<>c.<InjectValues>b__6_0(Type pluginType)
   в Eco.Shared.Utils.EnumerableExtensions.ForEach[T](IEnumerable`1 enumeration, Action`1 action)
   в Asphalt.Service.ServiceHelper.InjectValues()
   в Asphalt.Service.InjectPatch.Prefix() 
[15:24:13.300] [7] [ Info] [Eco] Запуск Плагин паузы...  
[15:24:13.300] [7] [ Info] [Eco] Загружаем Pause...  
[15:24:13.319] [1] [ Info] [Eco] Server Initialization завершена за 4 636,0мс
 
[15:24:13.319] [1] [ Info] [Eco] Failed to load server, Exception was Exception: ArgumentException
Message:Requested value 'Enabled' was not found.
Source:Newtonsoft.Json

System.ArgumentException: Requested value 'Enabled' was not found.
   at Newtonsoft.Json.Utilities.EnumUtils.ParseEnum(Type enumType, String value, Boolean disallowNumber)
   at Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)
 
